@page
@model HairSalonBookingApp.Pages.ServicePage.ListModel

@{
    ViewData["Title"] = "Service List";
}

<h2>Service List</h2>
@if (User.IsInRole("Admin"))
{
    <a asp-page="Create" class="btn btn-primary mb-3">Create New Service</a>
}

<table class="table table-bordered">
    <thead>
        <tr>
            <th>Service Name</th>
            <th>Description</th>
            <th>Price</th>
            <th>Duration</th>
            <th>AvatarImage</th>
            @if (User.IsInRole("Admin"))
            {
                <th>Actions</th>
            }
            @if (User.IsInRole("Customer"))
            {
                <th>Add Service</th>
            }
        </tr>
    </thead>
    <tbody>
        @foreach (var service in Model.Services)
        {
            <tr>
                <td>@service.ServiceName</td>
                <td>@service.Description</td>
                <td>@service.Price</td>
                <td>@service.Duration</td>
                <td>
                    <img src="@service.AvatarImage" alt="@service.ServiceName" style="width: 100px; height: 100px; object-fit: cover;" />
                </td>
                @if (User.IsInRole("Admin"))
                {
                    <td>
                        <a asp-page="Details" asp-route-id="@service.Id" class="btn btn-info">View</a> |
                        <a asp-page="./Edit" asp-route-id="@service.Id" class="btn btn-warning">Edit</a>
                        <form method="post" asp-page="Delete" asp-route-id="@service.Id" class="d-inline-block" onsubmit="return confirm('Are you sure you want to delete this service?');">
                            <button type="submit" class="btn btn-danger">Delete</button>
                        </form>
                    </td>
                }
                @if (User.IsInRole("Customer"))
                {
                    <td>
                        <button class="btn btn-success add-service" data-service-name="@service.ServiceName" data-service-id="@service.Id" data-service-description="@service.Description" data-service-price="@service.Price" data-service-duration="@service.Duration" data-service-avatar="@service.AvatarImage" onclick="addServiceToList(this)">Add</button>
                    </td>
                }
            </tr>
        }
    </tbody>
</table>

<div id="selectedServicesContainer" class="mt-5">
    <h4>Selected Services</h4>
    <div id="selectedServicesList" class="row"></div>
    <a href="~/BranchPage/List" id="goToBranchPageBtn" class="btn btn-primary mt-3" style="display:none;">Go to Branch Page</a>
</div>

<script>
    let selectedServices = JSON.parse(sessionStorage.getItem('selectedServices')) || [];

    function updateSelectedServicesDisplay() {
        const selectedServicesContainer = document.getElementById("selectedServicesList");
        selectedServicesContainer.innerHTML = ''; // Clear previous services

        selectedServices.forEach(service => {
            const serviceDiv = document.createElement("div");
            serviceDiv.classList.add("col-md-4", "service-item", "mb-3");

            serviceDiv.innerHTML = `
                    <div class="card">
                        <img src="${service.avatar}" alt="${service.name}" class="card-img-top" style="height: 200px; object-fit: cover;">
                        <div class="card-body">
                            <h5 class="card-title">${service.name}</h5>
                            <p class="card-text"><strong>Description:</strong> ${service.description}</p>
                            <p class="card-text"><strong>Price:</strong> $${service.price}</p>
                            <p class="card-text"><strong>Duration:</strong> ${service.duration} minutes</p>
                        </div>
                    </div>
                `;

            selectedServicesContainer.appendChild(serviceDiv);
        });

        // Toggle the "Go to Branch Page" button
        document.getElementById('goToBranchPageBtn').style.display = selectedServices.length > 0 ? 'inline-block' : 'none';
    }

    function addServiceToList(button) {
        const serviceName = button.getAttribute('data-service-name');
        const serviceId = button.getAttribute('data-service-id');
        const serviceDescription = button.getAttribute('data-service-description');
        const servicePrice = button.getAttribute('data-service-price');
        const serviceDuration = button.getAttribute('data-service-duration');
        const serviceAvatar = button.getAttribute('data-service-avatar');

        const service = {
            id: serviceId,
            name: serviceName,
            description: serviceDescription,
            price: servicePrice,
            duration: serviceDuration,
            avatar: serviceAvatar
        };

        // Check if the service already exists in the selectedServices array
        if (!selectedServices.find(s => s.id === serviceId)) {
            selectedServices.push(service);
            // Save to sessionStorage
            sessionStorage.setItem('selectedServices', JSON.stringify(selectedServices));
        }

        // Update the display of selected services
        updateSelectedServicesDisplay();

        // Disable the "Add" button after it has been clicked
        button.disabled = true;
        button.classList.add('btn-secondary');
        button.classList.remove('btn-success');
        button.innerText = 'Added';
    }

    // Load selected services from sessionStorage on page load
    document.addEventListener("DOMContentLoaded", () => {
        updateSelectedServicesDisplay();
    });
</script>


<style>
    #selectedServicesContainer {
        border: 2px solid #ddd;
        padding: 15px;
        background-color: #f9f9f9;
    }

        #selectedServicesContainer h4 {
            font-weight: bold;
        }

    .service-item {
        max-width: 300px;
        margin: 0 auto;
    }

    .card {
        border: 1px solid #ddd;
        border-radius: 8px;
        overflow: hidden;
        box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);
    }

    .card-body {
        padding: 15px;
    }

    .card-title {
        font-size: 1.25rem;
        font-weight: bold;
    }

    .card-text {
        font-size: 1rem;
        margin-bottom: 10px;
    }

    .btn-secondary {
        background-color: #6c757d;
        border-color: #6c757d;
    }
</style>
