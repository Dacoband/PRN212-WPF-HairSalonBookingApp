@page
@model HairSalonBookingApp.Pages.BookingAppointment.SelectStylistModel
@{
}

<style>
    #selectedServicesContainer {
        border: 2px solid #ddd;
        padding: 15px;
        background-color: #f9f9f9;
    }
</style>

<div class="container mt-5">
    <h2 class="text-center text-primary mb-4">Our Branches Stylist</h2>


    <div class="table-responsive shadow-sm rounded">
        <table class="table table-bordered table-hover align-middle text-center mb-0">
            <thead class="table-primary text-secondary">
                <tr>
                    <th>Stylist</th>
                    <th>Rating</th>
                    <th>Image</th>
                    <th>Actions</th>
                </tr>
            </thead>
            <tbody>
                @if (Model.Stylists != null && Model.Stylists.Any())
                {
                    @foreach (var stylist in Model.Stylists)
                    {
                        <tr>
                            <td>@stylist.StylistName</td>
                            <td>@stylist.AverageRating</td>
                            <td>@stylist.AvatarImage</td>
                            <td>
                                <form method="post" asp-page-handler="SelectBranch">
                                    <input type="hidden" name="branchId" value="@stylist.Id" />
                                    <button type="submit" class="btn btn-primary btn-sm">Select</button>
                                </form>
                            </td>
                        </tr>
                    }
                }
                else
                {
                    <tr>
                        <td colspan="5" class="text-muted">No stylist available.</td>
                    </tr>
                }
            </tbody>
        </table>
    </div>


    <div id="selectedServicesContainer" class="my-5">
        <h4>Selected Services</h4>
        <div id="selectedServicesList" class="row"></div>
    </div>

</div>

<style>
    /* General container styling */
    .container {
        max-width: 900px;
    }

    /* Title styling */
    h2 {
        color: #007bff;
        font-weight: bold;
        font-size: 2rem;
    }

    /* Table styling */
    .table {
        border-radius: 0.25rem;
        overflow: hidden;
        margin-bottom: 0;
    }

    .table thead {
        background-color: #007bff;
        color: white;
    }

    .table-hover tbody tr:hover {
        background-color: #f1f4f9;
    }

    .table th, .table td {
        vertical-align: middle;
    }

    /* Button styling */
    .btn-primary, .btn-outline-success {
        font-size: 1rem;
        padding: 0.5rem 1.25rem;
        transition: all 0.3s ease;
    }

    .btn-primary:hover, .btn-outline-success:hover {
        background-color: #0056b3;
        color: white;
    }

    .btn-secondary {
        font-size: 1rem;
        padding: 0.5rem 1.25rem;
        transition: all 0.3s ease;
    }

    .btn-secondary:hover {
        background-color: #5a6268;
        color: white;
    }

    /* Add New Branch button styling */
    .btn-outline-success i {
        font-size: 1.25rem;
    }

    /* Selected Services section */
    #selectedServicesContainer {
        border: 2px solid #ddd;
        padding: 15px;
        background-color: #f9f9f9;
        margin-top: 30px;
    }

    #selectedServicesList {
        display: flex;
        flex-wrap: wrap;
    }

    .service-item {
        max-width: 300px;
        margin: 10px;
        text-align: center;
    }

    .card {
        border: 1px solid #ddd;
        border-radius: 8px;
        overflow: hidden;
        box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);
        transition: transform 0.2s, box-shadow 0.2s;
    }

    .card:hover {
        transform: scale(1.05);
        box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);
    }

    .card-body {
        padding: 15px;
    }

    .card-title {
        font-size: 1.25rem;
        font-weight: bold;
    }

    .card-text {
        font-size: 1rem;
        margin-bottom: 10px;
    }

    .btn-secondary[disabled] {
        background-color: #6c757d;
        cursor: not-allowed;
    }

</style>

@section Scripts {
    <script>
        function formatPriceToVND(price) {
            return new Intl.NumberFormat('vi-VN', {
                style: 'currency',
                currency: 'VND'
            }).format(price);
        }

        // When the page loads, retrieve the selected services from sessionStorage
        document.addEventListener('DOMContentLoaded', function() {

            const selectedServices = JSON.parse(sessionStorage.getItem('selectedServices')) || [];

            const selectedServicesList = document.getElementById('selectedServicesList');

            console.log(selectedServices);
            // Clear the list before rendering
            selectedServicesList.innerHTML = '';

            if (selectedServices.length > 0) {
                selectedServices.forEach(service => {
                    // Create a div element for each selected service
                    const serviceItem = document.createElement('div');
                    serviceItem.classList.add('col-md-4', 'service-item');

                    // Create a card to display the service details
                    serviceItem.innerHTML = `
                        <div class="card">
                            <img src="${service.avatar}" alt="${service.name}" class="card-img-top" style="height: 200px; object-fit: cover;">
                            <div class="card-body">
                                <h5 class="card-title">${service.name}</h5>
                                <p class="card-text"><strong>Description:</strong> ${service.description}</p>
                                <p class="card-text"><strong>Price:</strong> ${formatPriceToVND(service.price)}</p>
                                <p class="card-text"><strong>Duration:</strong> ${service.duration} minutes</p>
                            </div>
                        </div>
                    `;

                    // Append the service item to the list
                    selectedServicesList.appendChild(serviceItem);
                });
            } else {
                selectedServicesList.innerHTML = '<p class="text-muted">No services selected.</p>';
            }
        });
    </script>
}
